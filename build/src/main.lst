GAS LISTING /tmp/ccspu7d2.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.rodata.str1.8,"aMS",@progbits,1
   7              		.align	3
   8              	.LC0:
   9 0000 54687265 		.string	"ThreadC Created\n"
   9      61644320 
   9      43726561 
   9      7465640A 
   9      00
  10 0011 00000000 		.align	3
  10      000000
  11              	.LC1:
  12 0018 54687265 		.string	"ThreadD Created\n"
  12      61644420 
  12      43726561 
  12      7465640A 
  12      00
  13 0029 00000000 		.align	3
  13      000000
  14              	.LC2:
  15 0030 4F564445 		.string	"OVDE SAM--------\n"
  15      2053414D 
  15      2D2D2D2D 
  15      2D2D2D2D 
  15      0A00
  16 0042 00000000 		.align	3
  16      0000
  17              	.LC3:
  18 0048 46696E69 		.string	"Finished\n"
  18      73686564 
  18      0A00
  19              		.text
  20              		.align	2
  21              		.globl	main
  23              	main:
  24              	.LFB33:
  25              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** //
   2:src/main.cpp  **** // Created by os on 2/11/23.
   3:src/main.cpp  **** //
   4:src/main.cpp  **** 
   5:src/main.cpp  **** #include "../h/tcb.hpp"
   6:src/main.cpp  **** #include "../h/workers.hpp"
   7:src/main.cpp  **** #include "../h/print.hpp"
   8:src/main.cpp  **** #include "../h/riscv.hpp"
   9:src/main.cpp  **** #include "../h/syscall_c.h"
  10:src/main.cpp  **** 
  11:src/main.cpp  **** int main()
  12:src/main.cpp  **** {
  26              		.loc 1 12 1
  27              		.cfi_startproc
  28 0000 130101FB 		addi	sp,sp,-80
  29              		.cfi_def_cfa_offset 80
GAS LISTING /tmp/ccspu7d2.s 			page 2


  30 0004 23341104 		sd	ra,72(sp)
  31 0008 23308104 		sd	s0,64(sp)
  32 000c 233C9102 		sd	s1,56(sp)
  33 0010 23382103 		sd	s2,48(sp)
  34              		.cfi_offset 1, -8
  35              		.cfi_offset 8, -16
  36              		.cfi_offset 9, -24
  37              		.cfi_offset 18, -32
  38 0014 13040105 		addi	s0,sp,80
  39              		.cfi_def_cfa 8, 0
  13:src/main.cpp  ****     Riscv::w_stvec((uint64) &Riscv::supervisorTrap);
  40              		.loc 1 13 5
  41              		.loc 1 13 19 is_stmt 0
  42 0018 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  42      83B70700 
  43              	.LVL0:
  44              	.LBB14:
  45              	.LBB15:
  46              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by marko on 20.4.22..
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_1_SYNCHRONOUS_RISCV_HPP
   6:src/../h/riscv.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_1_SYNCHRONOUS_RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp **** class Riscv
  11:src/../h/riscv.hpp **** {
  12:src/../h/riscv.hpp **** public:
  13:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  14:src/../h/riscv.hpp ****     static void popSppSpie();
  15:src/../h/riscv.hpp **** 
  16:src/../h/riscv.hpp ****     // push x3..x31 registers onto stack
  17:src/../h/riscv.hpp ****     static void pushRegisters();
  18:src/../h/riscv.hpp **** 
  19:src/../h/riscv.hpp ****     // pop x3..x31 registers onto stack
  20:src/../h/riscv.hpp ****     static void popRegisters();
  21:src/../h/riscv.hpp **** 
  22:src/../h/riscv.hpp ****     // read register scause
  23:src/../h/riscv.hpp ****     static uint64 r_scause();
  24:src/../h/riscv.hpp **** 
  25:src/../h/riscv.hpp ****     // write register scause
  26:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  27:src/../h/riscv.hpp **** 
  28:src/../h/riscv.hpp ****     // read register sepc
  29:src/../h/riscv.hpp ****     static uint64 r_sepc();
  30:src/../h/riscv.hpp **** 
  31:src/../h/riscv.hpp ****     // write register sepc
  32:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  33:src/../h/riscv.hpp **** 
  34:src/../h/riscv.hpp ****     // read register stvec
  35:src/../h/riscv.hpp ****     static uint64 r_stvec();
  36:src/../h/riscv.hpp **** 
  37:src/../h/riscv.hpp ****     // write register stvec
  38:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
GAS LISTING /tmp/ccspu7d2.s 			page 3


  39:src/../h/riscv.hpp **** 
  40:src/../h/riscv.hpp ****     // read register stval
  41:src/../h/riscv.hpp ****     static uint64 r_stval();
  42:src/../h/riscv.hpp **** 
  43:src/../h/riscv.hpp ****     // write register stval
  44:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  45:src/../h/riscv.hpp **** 
  46:src/../h/riscv.hpp ****     enum BitMaskSip
  47:src/../h/riscv.hpp ****     {
  48:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  49:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  50:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  51:src/../h/riscv.hpp ****     };
  52:src/../h/riscv.hpp **** 
  53:src/../h/riscv.hpp ****     // mask set register sip
  54:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  55:src/../h/riscv.hpp **** 
  56:src/../h/riscv.hpp ****     // mask clear register sip
  57:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  58:src/../h/riscv.hpp **** 
  59:src/../h/riscv.hpp ****     // read register sip
  60:src/../h/riscv.hpp ****     static uint64 r_sip();
  61:src/../h/riscv.hpp **** 
  62:src/../h/riscv.hpp ****     // write register sip
  63:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  64:src/../h/riscv.hpp **** 
  65:src/../h/riscv.hpp ****     enum BitMaskSstatus
  66:src/../h/riscv.hpp ****     {
  67:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  68:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  69:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  70:src/../h/riscv.hpp ****     };
  71:src/../h/riscv.hpp **** 
  72:src/../h/riscv.hpp ****     // mask set register sstatus
  73:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  74:src/../h/riscv.hpp **** 
  75:src/../h/riscv.hpp ****     // mask clear register sstatus
  76:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  77:src/../h/riscv.hpp **** 
  78:src/../h/riscv.hpp ****     // read register sstatus
  79:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  80:src/../h/riscv.hpp **** 
  81:src/../h/riscv.hpp ****     // write register sstatus
  82:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  83:src/../h/riscv.hpp **** 
  84:src/../h/riscv.hpp ****     // supervisor trap
  85:src/../h/riscv.hpp ****     static void supervisorTrap();
  86:src/../h/riscv.hpp **** 
  87:src/../h/riscv.hpp **** private:
  88:src/../h/riscv.hpp ****     // supervisor trap handler. Sve vezano za prekid radimo u ovoj funkciji
  89:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  90:src/../h/riscv.hpp **** 
  91:src/../h/riscv.hpp **** };
  92:src/../h/riscv.hpp **** 
  93:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
  94:src/../h/riscv.hpp **** {
  95:src/../h/riscv.hpp ****     uint64 volatile scause;
GAS LISTING /tmp/ccspu7d2.s 			page 4


  96:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  97:src/../h/riscv.hpp ****     return scause;
  98:src/../h/riscv.hpp **** }
  99:src/../h/riscv.hpp **** 
 100:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 101:src/../h/riscv.hpp **** {
 102:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 103:src/../h/riscv.hpp **** }
 104:src/../h/riscv.hpp **** 
 105:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 106:src/../h/riscv.hpp **** {
 107:src/../h/riscv.hpp ****     uint64 volatile sepc;
 108:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 109:src/../h/riscv.hpp ****     return sepc;
 110:src/../h/riscv.hpp **** }
 111:src/../h/riscv.hpp **** 
 112:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 113:src/../h/riscv.hpp **** {
 114:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 115:src/../h/riscv.hpp **** }
 116:src/../h/riscv.hpp **** 
 117:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 118:src/../h/riscv.hpp **** {
 119:src/../h/riscv.hpp ****     uint64 volatile stvec;
 120:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 121:src/../h/riscv.hpp ****     return stvec;
 122:src/../h/riscv.hpp **** }
 123:src/../h/riscv.hpp **** 
 124:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 125:src/../h/riscv.hpp **** {
 126:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
  47              		.loc 2 126 5 is_stmt 1
  48              		.loc 2 126 69 is_stmt 0
  49              	#APP
  50              	# 126 "src/../h/riscv.hpp" 1
 127              	}
  51              		csrw stvec, a5
  52              	# 0 "" 2
  53              	.LVL1:
  54              	#NO_APP
  55              	.LBE15:
  56              	.LBE14:
  14:src/main.cpp  ****     TCB* threads[5];
  57              		.loc 1 14 5 is_stmt 1
  15:src/main.cpp  **** 
  16:src/main.cpp  ****     thread_create(&threads[0], nullptr, nullptr);
  58              		.loc 1 16 5
  59              		.loc 1 16 18 is_stmt 0
  60 0024 13060000 		li	a2,0
  61 0028 93050000 		li	a1,0
  62 002c 130584FB 		addi	a0,s0,-72
  63 0030 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
  63      E7800000 
  64              	.LVL2:
  17:src/main.cpp  ****     // threads[0] = TCB::createThread(nullptr);
  18:src/main.cpp  ****     TCB::running = threads[0];
  65              		.loc 1 18 5 is_stmt 1
GAS LISTING /tmp/ccspu7d2.s 			page 5


  66              		.loc 1 18 18 is_stmt 0
  67 0038 033784FB 		ld	a4,-72(s0)
  68 003c 97070000 		la	a5,_ZN3TCB7runningE
  68      83B70700 
  69 0044 23B0E700 		sd	a4,0(a5)
  19:src/main.cpp  **** 
  20:src/main.cpp  **** //    threads[1] = TCB::createThread(workerBodyA);
  21:src/main.cpp  **** //    printString("ThreadA Created\n");
  22:src/main.cpp  **** //
  23:src/main.cpp  **** //    threads[2] = TCB::createThread(workerBodyB);
  24:src/main.cpp  **** //    printString("ThreadB Created\n");
  25:src/main.cpp  **** 
  26:src/main.cpp  **** //    threads[3] = TCB::createThread(workerBodyC);
  27:src/main.cpp  ****     thread_create(&threads[3], workerBodyC, nullptr);
  70              		.loc 1 27 5 is_stmt 1
  71              		.loc 1 27 18 is_stmt 0
  72 0048 13060000 		li	a2,0
  73 004c 97050000 		la	a1,_Z11workerBodyCPv
  73      83B50500 
  74 0054 130504FD 		addi	a0,s0,-48
  75 0058 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
  75      E7800000 
  76              	.LVL3:
  28:src/main.cpp  ****     printString("ThreadC Created\n");
  77              		.loc 1 28 5 is_stmt 1
  78              		.loc 1 28 16 is_stmt 0
  79 0060 17050000 		lla	a0,.LC0
  79      13050500 
  80 0068 97000000 		call	_Z11printStringPKc@plt
  80      E7800000 
  81              	.LVL4:
  29:src/main.cpp  **** //
  30:src/main.cpp  **** //    threads[4] = TCB::createThread(workerBodyD);
  31:src/main.cpp  ****     thread_create(&threads[4], workerBodyD, nullptr);
  82              		.loc 1 31 5 is_stmt 1
  83              		.loc 1 31 18 is_stmt 0
  84 0070 13060000 		li	a2,0
  85 0074 97050000 		la	a1,_Z11workerBodyDPv
  85      83B50500 
  86 007c 130584FD 		addi	a0,s0,-40
  87 0080 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
  87      E7800000 
  88              	.LVL5:
  32:src/main.cpp  ****     printString("ThreadD Created\n");
  89              		.loc 1 32 5 is_stmt 1
  90              		.loc 1 32 16 is_stmt 0
  91 0088 17050000 		lla	a0,.LC1
  91      13050500 
  92 0090 97000000 		call	_Z11printStringPKc@plt
  92      E7800000 
  93              	.LVL6:
  33:src/main.cpp  **** 
  34:src/main.cpp  **** 
  35:src/main.cpp  ****     Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
  94              		.loc 1 35 5 is_stmt 1
  95              	.LBB16:
  96              	.LBB17:
GAS LISTING /tmp/ccspu7d2.s 			page 6


 128:src/../h/riscv.hpp **** 
 129:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 130:src/../h/riscv.hpp **** {
 131:src/../h/riscv.hpp ****     uint64 volatile stval;
 132:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 133:src/../h/riscv.hpp ****     return stval;
 134:src/../h/riscv.hpp **** }
 135:src/../h/riscv.hpp **** 
 136:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 137:src/../h/riscv.hpp **** {
 138:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 139:src/../h/riscv.hpp **** }
 140:src/../h/riscv.hpp **** 
 141:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 142:src/../h/riscv.hpp **** {
 143:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 144:src/../h/riscv.hpp **** }
 145:src/../h/riscv.hpp **** 
 146:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 147:src/../h/riscv.hpp **** {
 148:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 149:src/../h/riscv.hpp **** }
 150:src/../h/riscv.hpp **** 
 151:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 152:src/../h/riscv.hpp **** {
 153:src/../h/riscv.hpp ****     uint64 volatile sip;
 154:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 155:src/../h/riscv.hpp ****     return sip;
 156:src/../h/riscv.hpp **** }
 157:src/../h/riscv.hpp **** 
 158:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 159:src/../h/riscv.hpp **** {
 160:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 161:src/../h/riscv.hpp **** }
 162:src/../h/riscv.hpp **** 
 163:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 164:src/../h/riscv.hpp **** {
 165:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
  97              		.loc 2 165 5
  98              		.loc 2 165 68 is_stmt 0
  99 0098 93072000 		li	a5,2
 100              	#APP
 101              	# 165 "src/../h/riscv.hpp" 1
 166              	}
 102              		csrs sstatus, a5
 103              	# 0 "" 2
 104              		.loc 2 166 1
 105              	#NO_APP
 106 00a0 6F00C001 		j	.L4
 107              	.LVL7:
 108              	.L2:
 109              	.LBE17:
 110              	.LBE16:
  36:src/main.cpp  **** 
  37:src/main.cpp  ****     while (!(
  38:src/main.cpp  ****              threads[3]->isFinished() &&
  39:src/main.cpp  ****              threads[4]->isFinished()))
GAS LISTING /tmp/ccspu7d2.s 			page 7


  40:src/main.cpp  ****     {
  41:src/main.cpp  ****         printString("OVDE SAM--------\n");
 111              		.loc 1 41 9 is_stmt 1 discriminator 3
 112              		.loc 1 41 20 is_stmt 0 discriminator 3
 113 00a4 17050000 		lla	a0,.LC2
 113      13050500 
 114 00ac 97000000 		call	_Z11printStringPKc@plt
 114      E7800000 
 115              	.LVL8:
  42:src/main.cpp  ****         //TCB::yield();
  43:src/main.cpp  ****         thread_dispatch();
 116              		.loc 1 43 9 is_stmt 1 discriminator 3
 117              		.loc 1 43 24 is_stmt 0 discriminator 3
 118 00b4 97000000 		call	_Z15thread_dispatchv@plt
 118      E7800000 
 119              	.LVL9:
 120              	.L4:
  37:src/main.cpp  ****              threads[3]->isFinished() &&
 121              		.loc 1 37 5 is_stmt 1
  37:src/main.cpp  ****              threads[3]->isFinished() &&
 122              		.loc 1 37 12
  38:src/main.cpp  ****              threads[4]->isFinished()))
 123              		.loc 1 38 23 is_stmt 0
 124 00bc 833704FD 		ld	a5,-48(s0)
 125              	.LVL10:
 126              	.LBB18:
 127              	.LBB19:
 128              		.file 3 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** //
   2:src/../h/tcb.hpp **** // Created by os on 2/11/23.
   3:src/../h/tcb.hpp **** //
   4:src/../h/tcb.hpp **** 
   5:src/../h/tcb.hpp **** #ifndef PROJECT_BASE_TCB_HPP
   6:src/../h/tcb.hpp **** #define PROJECT_BASE_TCB_HPP
   7:src/../h/tcb.hpp **** 
   8:src/../h/tcb.hpp **** #include "../lib/hw.h"
   9:src/../h/tcb.hpp **** #include "scheduler.hpp"
  10:src/../h/tcb.hpp **** 
  11:src/../h/tcb.hpp **** // Thread Control Block
  12:src/../h/tcb.hpp **** class TCB {
  13:src/../h/tcb.hpp **** public:
  14:src/../h/tcb.hpp ****     ~TCB() { delete[] stack; }
  15:src/../h/tcb.hpp **** 
  16:src/../h/tcb.hpp ****     bool isFinished() const { return finished; }
 129              		.loc 3 16 31 is_stmt 1
 130              		.loc 3 16 38 is_stmt 0
 131 00c0 83C70703 		lbu	a5,48(a5)
 132              	.LVL11:
 133              	.LBE19:
 134              	.LBE18:
  37:src/main.cpp  ****              threads[3]->isFinished() &&
 135              		.loc 1 37 12
 136 00c4 E38007FE 		beqz	a5,.L2
  39:src/main.cpp  ****     {
 137              		.loc 1 39 23 discriminator 2
 138 00c8 833784FD 		ld	a5,-40(s0)
 139              	.LVL12:
GAS LISTING /tmp/ccspu7d2.s 			page 8


 140              	.LBB20:
 141              	.LBB21:
 142              		.loc 3 16 31 is_stmt 1 discriminator 2
 143              		.loc 3 16 38 is_stmt 0 discriminator 2
 144 00cc 83C70703 		lbu	a5,48(a5)
 145              	.LVL13:
 146              	.LBE21:
 147              	.LBE20:
  37:src/main.cpp  ****              threads[3]->isFinished() &&
 148              		.loc 1 37 12 discriminator 2
 149 00d0 E38A07FC 		beqz	a5,.L2
 150 00d4 930484FB 		addi	s1,s0,-72
 151 00d8 6F004001 		j	.L3
 152              	.LVL14:
 153              	.L7:
 154              	.LBB22:
  44:src/main.cpp  ****     }
  45:src/main.cpp  **** 
  46:src/main.cpp  **** 
  47:src/main.cpp  ****     for(auto& thread : threads)
  48:src/main.cpp  ****         delete thread;
 155              		.loc 1 48 16
 156 00dc 13050900 		mv	a0,s2
 157 00e0 97000000 		call	_ZdlPv@plt
 157      E7800000 
 158              	.LVL15:
 159              	.L6:
  47:src/main.cpp  ****         delete thread;
 160              		.loc 1 47 5 is_stmt 1 discriminator 3
 161 00e8 93848400 		addi	s1,s1,8
 162              	.LVL16:
 163              	.L3:
  47:src/main.cpp  ****         delete thread;
 164              		.loc 1 47 24 discriminator 1
 165 00ec 930704FE 		addi	a5,s0,-32
 166 00f0 6380F402 		beq	s1,a5,.L5
 167              	.LVL17:
 168              		.loc 1 48 9 discriminator 2
 169              		.loc 1 48 16 is_stmt 0 discriminator 2
 170 00f4 03B90400 		ld	s2,0(s1)
 171              		.loc 1 48 22 discriminator 2
 172 00f8 E30809FE 		beqz	s2,.L6
 173              	.LVL18:
 174              	.LBB23:
 175              	.LBB24:
  14:src/../h/tcb.hpp **** 
 176              		.loc 3 14 14 is_stmt 1
  14:src/../h/tcb.hpp **** 
 177              		.loc 3 14 23 is_stmt 0
 178 00fc 03350901 		ld	a0,16(s2)
  14:src/../h/tcb.hpp **** 
 179              		.loc 3 14 28
 180 0100 E30E05FC 		beqz	a0,.L7
  14:src/../h/tcb.hpp **** 
 181              		.loc 3 14 23
 182 0104 97000000 		call	_ZdaPv@plt
 182      E7800000 
GAS LISTING /tmp/ccspu7d2.s 			page 9


 183              	.LVL19:
 184 010c 6FF01FFD 		j	.L7
 185              	.LVL20:
 186              	.L5:
 187              	.LBE24:
 188              	.LBE23:
 189              	.LBE22:
  49:src/main.cpp  **** 
  50:src/main.cpp  ****     printString("Finished\n");
 190              		.loc 1 50 5 is_stmt 1
 191              		.loc 1 50 16 is_stmt 0
 192 0110 17050000 		lla	a0,.LC3
 192      13050500 
 193 0118 97000000 		call	_Z11printStringPKc@plt
 193      E7800000 
 194              	.LVL21:
  51:src/main.cpp  **** 
  52:src/main.cpp  ****     return 0;
 195              		.loc 1 52 5 is_stmt 1
  53:src/main.cpp  **** }...
 196              		.loc 1 53 1 is_stmt 0
 197 0120 13050000 		li	a0,0
 198 0124 83308104 		ld	ra,72(sp)
 199              		.cfi_restore 1
 200 0128 03340104 		ld	s0,64(sp)
 201              		.cfi_restore 8
 202              		.cfi_def_cfa 2, 80
 203 012c 83348103 		ld	s1,56(sp)
 204              		.cfi_restore 9
 205              	.LVL22:
 206 0130 03390103 		ld	s2,48(sp)
 207              		.cfi_restore 18
 208 0134 13010105 		addi	sp,sp,80
 209              		.cfi_def_cfa_offset 0
 210 0138 67800000 		jr	ra
 211              		.cfi_endproc
 212              	.LFE33:
 214              	.Letext0:
 215              		.file 4 "src/../h/../lib/hw.h"
 216              		.file 5 "src/../h/syscall_c.h"
 217              		.file 6 "src/../h/print.hpp"
GAS LISTING /tmp/ccspu7d2.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccspu7d2.s:23     .text:0000000000000000 main
     /tmp/ccspu7d2.s:27     .text:0000000000000000 .L0 
     /tmp/ccspu7d2.s:28     .text:0000000000000000 .L0 
     /tmp/ccspu7d2.s:29     .text:0000000000000004 .L0 
     /tmp/ccspu7d2.s:34     .text:0000000000000014 .L0 
     /tmp/ccspu7d2.s:35     .text:0000000000000014 .L0 
     /tmp/ccspu7d2.s:36     .text:0000000000000014 .L0 
     /tmp/ccspu7d2.s:37     .text:0000000000000014 .L0 
     /tmp/ccspu7d2.s:39     .text:0000000000000018 .L0 
     /tmp/ccspu7d2.s:41     .text:0000000000000018 .L0 
     /tmp/ccspu7d2.s:42     .text:0000000000000018 .L0 
     /tmp/ccspu7d2.s:48     .text:0000000000000020 .L0 
  src/../h/riscv.hpp:126    .text:0000000000000020 .L0 
     /tmp/ccspu7d2.s:58     .text:0000000000000024 .L0 
     /tmp/ccspu7d2.s:59     .text:0000000000000024 .L0 
     /tmp/ccspu7d2.s:60     .text:0000000000000024 .L0 
     /tmp/ccspu7d2.s:66     .text:0000000000000038 .L0 
     /tmp/ccspu7d2.s:67     .text:0000000000000038 .L0 
     /tmp/ccspu7d2.s:71     .text:0000000000000048 .L0 
     /tmp/ccspu7d2.s:72     .text:0000000000000048 .L0 
     /tmp/ccspu7d2.s:78     .text:0000000000000060 .L0 
     /tmp/ccspu7d2.s:79     .text:0000000000000060 .L0 
     /tmp/ccspu7d2.s:83     .text:0000000000000070 .L0 
     /tmp/ccspu7d2.s:84     .text:0000000000000070 .L0 
     /tmp/ccspu7d2.s:90     .text:0000000000000088 .L0 
     /tmp/ccspu7d2.s:91     .text:0000000000000088 .L0 
     /tmp/ccspu7d2.s:97     .text:0000000000000098 .L0 
     /tmp/ccspu7d2.s:98     .text:0000000000000098 .L0 
     /tmp/ccspu7d2.s:99     .text:0000000000000098 .L0 
     /tmp/ccspu7d2.s:106    .text:00000000000000a0 .L0 
     /tmp/ccspu7d2.s:112    .text:00000000000000a4 .L0 
     /tmp/ccspu7d2.s:113    .text:00000000000000a4 .L0 
     /tmp/ccspu7d2.s:117    .text:00000000000000b4 .L0 
     /tmp/ccspu7d2.s:118    .text:00000000000000b4 .L0 
     /tmp/ccspu7d2.s:122    .text:00000000000000bc .L0 
     /tmp/ccspu7d2.s:123    .text:00000000000000bc .L0 
     /tmp/ccspu7d2.s:124    .text:00000000000000bc .L0 
     /tmp/ccspu7d2.s:130    .text:00000000000000c0 .L0 
     /tmp/ccspu7d2.s:131    .text:00000000000000c0 .L0 
     /tmp/ccspu7d2.s:136    .text:00000000000000c4 .L0 
     /tmp/ccspu7d2.s:138    .text:00000000000000c8 .L0 
     /tmp/ccspu7d2.s:143    .text:00000000000000cc .L0 
     /tmp/ccspu7d2.s:144    .text:00000000000000cc .L0 
     /tmp/ccspu7d2.s:149    .text:00000000000000d0 .L0 
     /tmp/ccspu7d2.s:156    .text:00000000000000dc .L0 
     /tmp/ccspu7d2.s:161    .text:00000000000000e8 .L0 
     /tmp/ccspu7d2.s:165    .text:00000000000000ec .L0 
     /tmp/ccspu7d2.s:169    .text:00000000000000f4 .L0 
     /tmp/ccspu7d2.s:170    .text:00000000000000f4 .L0 
     /tmp/ccspu7d2.s:172    .text:00000000000000f8 .L0 
     /tmp/ccspu7d2.s:177    .text:00000000000000fc .L0 
     /tmp/ccspu7d2.s:178    .text:00000000000000fc .L0 
     /tmp/ccspu7d2.s:180    .text:0000000000000100 .L0 
     /tmp/ccspu7d2.s:182    .text:0000000000000104 .L0 
     /tmp/ccspu7d2.s:191    .text:0000000000000110 .L0 
GAS LISTING /tmp/ccspu7d2.s 			page 11


     /tmp/ccspu7d2.s:192    .text:0000000000000110 .L0 
     /tmp/ccspu7d2.s:196    .text:0000000000000120 .L0 
     /tmp/ccspu7d2.s:197    .text:0000000000000120 .L0 
     /tmp/ccspu7d2.s:199    .text:0000000000000128 .L0 
     /tmp/ccspu7d2.s:201    .text:000000000000012c .L0 
     /tmp/ccspu7d2.s:202    .text:000000000000012c .L0 
     /tmp/ccspu7d2.s:204    .text:0000000000000130 .L0 
     /tmp/ccspu7d2.s:207    .text:0000000000000134 .L0 
     /tmp/ccspu7d2.s:209    .text:0000000000000138 .L0 
     /tmp/ccspu7d2.s:211    .text:000000000000013c .L0 
     /tmp/ccspu7d2.s:218    .text:000000000000013c .L0 
     /tmp/ccspu7d2.s:42     .text:0000000000000018 .L0 
     /tmp/ccspu7d2.s:68     .text:000000000000003c .L0 
     /tmp/ccspu7d2.s:73     .text:000000000000004c .L0 
     /tmp/ccspu7d2.s:8      .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccspu7d2.s:79     .text:0000000000000060 .L0 
     /tmp/ccspu7d2.s:85     .text:0000000000000074 .L0 
     /tmp/ccspu7d2.s:11     .rodata.str1.8:0000000000000018 .LC1
     /tmp/ccspu7d2.s:91     .text:0000000000000088 .L0 
     /tmp/ccspu7d2.s:14     .rodata.str1.8:0000000000000030 .LC2
     /tmp/ccspu7d2.s:113    .text:00000000000000a4 .L0 
     /tmp/ccspu7d2.s:17     .rodata.str1.8:0000000000000048 .LC3
     /tmp/ccspu7d2.s:192    .text:0000000000000110 .L0 
     /tmp/ccspu7d2.s:120    .text:00000000000000bc .L4
     /tmp/ccspu7d2.s:108    .text:00000000000000a4 .L2
     /tmp/ccspu7d2.s:163    .text:00000000000000ec .L3
     /tmp/ccspu7d2.s:186    .text:0000000000000110 .L5
     /tmp/ccspu7d2.s:159    .text:00000000000000e8 .L6
     /tmp/ccspu7d2.s:153    .text:00000000000000dc .L7
     /tmp/ccspu7d2.s:1144   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccspu7d2.s:2315   .debug_str:0000000000000605 .LASF107
     /tmp/ccspu7d2.s:2219   .debug_str:000000000000036d .LASF108
     /tmp/ccspu7d2.s:2177   .debug_str:0000000000000213 .LASF109
     /tmp/ccspu7d2.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccspu7d2.s:214    .text:000000000000013c .Letext0
     /tmp/ccspu7d2.s:2101   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccspu7d2.s:2247   .debug_str:000000000000042e .LASF0
     /tmp/ccspu7d2.s:2257   .debug_str:000000000000045b .LASF1
     /tmp/ccspu7d2.s:2235   .debug_str:00000000000003db .LASF2
     /tmp/ccspu7d2.s:2205   .debug_str:0000000000000325 .LASF4
     /tmp/ccspu7d2.s:2293   .debug_str:000000000000055a .LASF3
     /tmp/ccspu7d2.s:2125   .debug_str:000000000000008d .LASF5
     /tmp/ccspu7d2.s:2261   .debug_str:000000000000048f .LASF6
     /tmp/ccspu7d2.s:2245   .debug_str:000000000000041b .LASF7
     /tmp/ccspu7d2.s:2319   .debug_str:00000000000006d8 .LASF8
     /tmp/ccspu7d2.s:2191   .debug_str:0000000000000286 .LASF9
     /tmp/ccspu7d2.s:2273   .debug_str:00000000000004d5 .LASF10
     /tmp/ccspu7d2.s:2317   .debug_str:00000000000006c9 .LASF11
     /tmp/ccspu7d2.s:2129   .debug_str:00000000000000a0 .LASF12
     /tmp/ccspu7d2.s:2107   .debug_str:0000000000000022 .LASF13
     /tmp/ccspu7d2.s:2137   .debug_str:00000000000000ea .LASF14
     /tmp/ccspu7d2.s:2285   .debug_str:000000000000051f .LASF15
     /tmp/ccspu7d2.s:2149   .debug_str:0000000000000132 .LASF16
     /tmp/ccspu7d2.s:2113   .debug_str:0000000000000047 .LASF110
     /tmp/ccspu7d2.s:2161   .debug_str:00000000000001ae .LASF17
     /tmp/ccspu7d2.s:2279   .debug_str:0000000000000503 .LASF19
     /tmp/ccspu7d2.s:2263   .debug_str:00000000000004a2 .LASF21
GAS LISTING /tmp/ccspu7d2.s 			page 12


     /tmp/ccspu7d2.s:2189   .debug_str:000000000000026f .LASF23
     /tmp/ccspu7d2.s:2237   .debug_str:00000000000003e9 .LASF18
     /tmp/ccspu7d2.s:2201   .debug_str:00000000000002e6 .LASF20
     /tmp/ccspu7d2.s:2227   .debug_str:00000000000003a7 .LASF22
     /tmp/ccspu7d2.s:2123   .debug_str:0000000000000074 .LASF24
     /tmp/ccspu7d2.s:2217   .debug_str:0000000000000360 .LASF25
     /tmp/ccspu7d2.s:2339   .debug_str:0000000000000767 .LASF26
     /tmp/ccspu7d2.s:2281   .debug_str:000000000000050f .LASF111
     /tmp/ccspu7d2.s:2287   .debug_str:0000000000000535 .LASF44
     /tmp/ccspu7d2.s:2243   .debug_str:000000000000040b .LASF46
     /tmp/ccspu7d2.s:2167   .debug_str:00000000000001d7 .LASF112
     /tmp/ccspu7d2.s:2193   .debug_str:0000000000000294 .LASF113
     /tmp/ccspu7d2.s:2211   .debug_str:0000000000000348 .LASF27
     /tmp/ccspu7d2.s:2141   .debug_str:00000000000000fb .LASF28
     /tmp/ccspu7d2.s:2215   .debug_str:0000000000000358 .LASF29
     /tmp/ccspu7d2.s:2253   .debug_str:000000000000044b .LASF30
     /tmp/ccspu7d2.s:2209   .debug_str:000000000000033f .LASF31
     /tmp/ccspu7d2.s:2229   .debug_str:00000000000003b4 .LASF32
     /tmp/ccspu7d2.s:2231   .debug_str:00000000000003c6 .LASF33
     /tmp/ccspu7d2.s:2197   .debug_str:00000000000002c2 .LASF35
     /tmp/ccspu7d2.s:2323   .debug_str:00000000000006fd .LASF114
     /tmp/ccspu7d2.s:2203   .debug_str:00000000000002fd .LASF115
     /tmp/ccspu7d2.s:2251   .debug_str:0000000000000442 .LASF34
     /tmp/ccspu7d2.s:2173   .debug_str:00000000000001fb .LASF36
     /tmp/ccspu7d2.s:2295   .debug_str:000000000000056c .LASF116
     /tmp/ccspu7d2.s:2223   .debug_str:0000000000000384 .LASF37
     /tmp/ccspu7d2.s:2199   .debug_str:00000000000002db .LASF38
     /tmp/ccspu7d2.s:2175   .debug_str:000000000000020e .LASF39
     /tmp/ccspu7d2.s:2255   .debug_str:0000000000000455 .LASF40
     /tmp/ccspu7d2.s:2153   .debug_str:000000000000015c .LASF117
     /tmp/ccspu7d2.s:2147   .debug_str:0000000000000126 .LASF41
     /tmp/ccspu7d2.s:2327   .debug_str:0000000000000717 .LASF42
     /tmp/ccspu7d2.s:2127   .debug_str:0000000000000094 .LASF43
     /tmp/ccspu7d2.s:2283   .debug_str:0000000000000514 .LASF45
     /tmp/ccspu7d2.s:2333   .debug_str:000000000000073c .LASF47
     /tmp/ccspu7d2.s:2121   .debug_str:0000000000000066 .LASF48
     /tmp/ccspu7d2.s:2165   .debug_str:00000000000001bc .LASF49
     /tmp/ccspu7d2.s:2307   .debug_str:00000000000005cc .LASF50
     /tmp/ccspu7d2.s:2105   .debug_str:0000000000000008 .LASF51
     /tmp/ccspu7d2.s:2109   .debug_str:0000000000000032 .LASF52
     /tmp/ccspu7d2.s:2305   .debug_str:00000000000005b7 .LASF54
     /tmp/ccspu7d2.s:2163   .debug_str:00000000000001b3 .LASF56
     /tmp/ccspu7d2.s:2145   .debug_str:0000000000000111 .LASF58
     /tmp/ccspu7d2.s:2297   .debug_str:000000000000057d .LASF53
     /tmp/ccspu7d2.s:2277   .debug_str:00000000000004f0 .LASF55
     /tmp/ccspu7d2.s:2313   .debug_str:00000000000005fe .LASF57
     /tmp/ccspu7d2.s:2309   .debug_str:00000000000005d9 .LASF59
     /tmp/ccspu7d2.s:2183   .debug_str:0000000000000259 .LASF60
     /tmp/ccspu7d2.s:2151   .debug_str:0000000000000148 .LASF61
     /tmp/ccspu7d2.s:2103   .debug_str:0000000000000000 .LASF62
     /tmp/ccspu7d2.s:2299   .debug_str:0000000000000584 .LASF63
     /tmp/ccspu7d2.s:2169   .debug_str:00000000000001df .LASF64
     /tmp/ccspu7d2.s:2131   .debug_str:00000000000000b0 .LASF65
     /tmp/ccspu7d2.s:2337   .debug_str:000000000000075f .LASF66
     /tmp/ccspu7d2.s:2171   .debug_str:00000000000001e7 .LASF67
     /tmp/ccspu7d2.s:2249   .debug_str:000000000000043b .LASF68
     /tmp/ccspu7d2.s:2329   .debug_str:0000000000000724 .LASF69
GAS LISTING /tmp/ccspu7d2.s 			page 13


     /tmp/ccspu7d2.s:2119   .debug_str:000000000000005f .LASF70
     /tmp/ccspu7d2.s:2181   .debug_str:0000000000000246 .LASF71
     /tmp/ccspu7d2.s:2187   .debug_str:0000000000000269 .LASF72
     /tmp/ccspu7d2.s:2311   .debug_str:00000000000005ec .LASF73
     /tmp/ccspu7d2.s:2117   .debug_str:0000000000000059 .LASF74
     /tmp/ccspu7d2.s:2341   .debug_str:000000000000078b .LASF75
     /tmp/ccspu7d2.s:2335   .debug_str:0000000000000754 .LASF76
     /tmp/ccspu7d2.s:2289   .debug_str:000000000000053b .LASF77
     /tmp/ccspu7d2.s:2213   .debug_str:000000000000034d .LASF78
     /tmp/ccspu7d2.s:2225   .debug_str:000000000000038f .LASF79
     /tmp/ccspu7d2.s:2135   .debug_str:00000000000000e0 .LASF80
     /tmp/ccspu7d2.s:2271   .debug_str:00000000000004bf .LASF81
     /tmp/ccspu7d2.s:2241   .debug_str:0000000000000401 .LASF82
     /tmp/ccspu7d2.s:2195   .debug_str:00000000000002ac .LASF83
     /tmp/ccspu7d2.s:2301   .debug_str:0000000000000598 .LASF84
     /tmp/ccspu7d2.s:2133   .debug_str:00000000000000c4 .LASF85
     /tmp/ccspu7d2.s:2321   .debug_str:00000000000006e8 .LASF86
     /tmp/ccspu7d2.s:2155   .debug_str:000000000000016b .LASF87
     /tmp/ccspu7d2.s:2269   .debug_str:00000000000004ba .LASF88
     /tmp/ccspu7d2.s:24     .text:0000000000000000 .LFB33
     /tmp/ccspu7d2.s:212    .text:000000000000013c .LFE33
     /tmp/ccspu7d2.s:2185   .debug_str:0000000000000261 .LASF89
     /tmp/ccspu7d2.s:154    .text:00000000000000dc .LBB22
     /tmp/ccspu7d2.s:189    .text:0000000000000110 .LBE22
     /tmp/ccspu7d2.s:2265   .debug_str:00000000000004ad .LASF90
     /tmp/ccspu7d2.s:2041   .debug_loc:0000000000000000 .LLST3
     /tmp/ccspu7d2.s:2325   .debug_str:000000000000070b .LASF91
     /tmp/ccspu7d2.s:2275   .debug_str:00000000000004e4 .LASF118
     /tmp/ccspu7d2.s:2052   .debug_loc:0000000000000036 .LLST4
     /tmp/ccspu7d2.s:2221   .debug_str:000000000000037a .LASF92
     /tmp/ccspu7d2.s:174    .text:00000000000000fc .LBB23
     /tmp/ccspu7d2.s:188    .text:0000000000000110 .LBE23
     /tmp/ccspu7d2.s:2059   .debug_loc:0000000000000059 .LLST5
     /tmp/ccspu7d2.s:183    .text:000000000000010c .LVL19
     /tmp/ccspu7d2.s:158    .text:00000000000000e8 .LVL15
     /tmp/ccspu7d2.s:44     .text:0000000000000020 .LBB14
     /tmp/ccspu7d2.s:56     .text:0000000000000024 .LBE14
     /tmp/ccspu7d2.s:95     .text:0000000000000098 .LBB16
     /tmp/ccspu7d2.s:110    .text:00000000000000a4 .LBE16
     /tmp/ccspu7d2.s:2066   .debug_loc:000000000000007c .LLST0
     /tmp/ccspu7d2.s:126    .text:00000000000000c0 .LBB18
     /tmp/ccspu7d2.s:134    .text:00000000000000c4 .LBE18
     /tmp/ccspu7d2.s:2074   .debug_loc:00000000000000a0 .LLST1
     /tmp/ccspu7d2.s:140    .text:00000000000000cc .LBB20
     /tmp/ccspu7d2.s:147    .text:00000000000000d0 .LBE20
     /tmp/ccspu7d2.s:2081   .debug_loc:00000000000000c3 .LLST2
     /tmp/ccspu7d2.s:64     .text:0000000000000038 .LVL2
     /tmp/ccspu7d2.s:76     .text:0000000000000060 .LVL3
     /tmp/ccspu7d2.s:81     .text:0000000000000070 .LVL4
     /tmp/ccspu7d2.s:88     .text:0000000000000088 .LVL5
     /tmp/ccspu7d2.s:93     .text:0000000000000098 .LVL6
     /tmp/ccspu7d2.s:115    .text:00000000000000b4 .LVL8
     /tmp/ccspu7d2.s:119    .text:00000000000000bc .LVL9
     /tmp/ccspu7d2.s:194    .text:0000000000000120 .LVL21
     /tmp/ccspu7d2.s:2139   .debug_str:00000000000000f6 .LASF93
     /tmp/ccspu7d2.s:2267   .debug_str:00000000000004b4 .LASF94
     /tmp/ccspu7d2.s:2331   .debug_str:0000000000000737 .LASF95
GAS LISTING /tmp/ccspu7d2.s 			page 14


     /tmp/ccspu7d2.s:2115   .debug_str:000000000000004f .LASF96
     /tmp/ccspu7d2.s:2239   .debug_str:00000000000003f5 .LASF119
     /tmp/ccspu7d2.s:2291   .debug_str:0000000000000553 .LASF97
     /tmp/ccspu7d2.s:2207   .debug_str:000000000000032c .LASF99
     /tmp/ccspu7d2.s:2233   .debug_str:00000000000003d4 .LASF98
     /tmp/ccspu7d2.s:2303   .debug_str:00000000000005a7 .LASF100
     /tmp/ccspu7d2.s:2259   .debug_str:000000000000046e .LASF101
     /tmp/ccspu7d2.s:2159   .debug_str:00000000000001a0 .LASF103
     /tmp/ccspu7d2.s:2157   .debug_str:000000000000018d .LASF102
     /tmp/ccspu7d2.s:2111   .debug_str:000000000000003b .LASF104
     /tmp/ccspu7d2.s:2179   .debug_str:0000000000000231 .LASF105
     /tmp/ccspu7d2.s:2143   .debug_str:0000000000000101 .LASF106
     /tmp/ccspu7d2.s:152    .text:00000000000000dc .LVL14
     /tmp/ccspu7d2.s:162    .text:00000000000000ec .LVL16
     /tmp/ccspu7d2.s:167    .text:00000000000000f4 .LVL17
     /tmp/ccspu7d2.s:185    .text:0000000000000110 .LVL20
     /tmp/ccspu7d2.s:205    .text:0000000000000130 .LVL22
     /tmp/ccspu7d2.s:173    .text:00000000000000fc .LVL18
     /tmp/ccspu7d2.s:107    .text:00000000000000a4 .LVL7
     /tmp/ccspu7d2.s:125    .text:00000000000000c0 .LVL10
     /tmp/ccspu7d2.s:132    .text:00000000000000c4 .LVL11
     /tmp/ccspu7d2.s:139    .text:00000000000000cc .LVL12
     /tmp/ccspu7d2.s:145    .text:00000000000000d0 .LVL13
     /tmp/ccspu7d2.s:219    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_ZN5Riscv14supervisorTrapEv
_Z13thread_createPP3TCBPFvPvES2_
_ZN3TCB7runningE
_Z11workerBodyCPv
_Z11printStringPKc
_Z11workerBodyDPv
_Z15thread_dispatchv
_ZdlPv
_ZdaPv
